swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Fetch all transactions for the current month
      description: >-
        API for fetching all user transactions for the current month, grouped by
        account
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/TransactionsByAccount"
        "400":
          description: Invalid request
        "500":
          description: Internal Server Error
  /transaction/details/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Get each transaction details
      description: Retrieve detailed information of a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          type: integer
          description: ID of the transaction to retrieve
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Update a transaction
      description: Modify specific attributes of a transaction (e.g., note, description)
      parameters:
        - in: path
          name: transactionId
          required: true
          type: integer
          description: ID of the transaction to update
        - in: body
          name: body
          required: true
          description: Fields to update in the transaction
          schema:
            $ref: "#/definitions/TransactionUpdate"
      responses:
        "200":
          description: Transaction updated successfully
        "400":
          description: Invalid request
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionsByAccount:
    type: object
    properties:
      accountId:
        type: string
        example: E1do0Et3
      accountName:
        type: string
        example: Argent Bank Checking
      date:
        type: string
        format: date
        example: "27-02-2020"
      balance:
        type: number
        example: 268.21
      amount:
        type: number
        example: 8.00
      currency:
        type: string
        example: USD
  Transaction:
    type: object
    properties:
      id:
        type: integer
        example: 1
      date:
        type: string
        format: date
        example: "27-02-2020"
      balance:
        type: number
        example: 268.21
      amount:
        type: number
        example: 8.00
      currency:
        type: string
        example: USD
      description:
        type: string
        example: Golden Sun Bakery
      transactionType:
        type: string
        example: Electronic
      category:
        type: string
        example: Groceries
      note:
        type: string
        example: Buy Milk for the baby
  TransactionUpdate:
    type: object
    properties:
      description:
        type: string
        example: Booking ticket
      note:
        type: string
        example: Booked a travel to France
